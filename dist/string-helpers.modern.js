var a=a=>a.charAt(0).toLowerCase()+a.slice(1),e=a=>a.charAt(0).toUpperCase()+a.slice(1),r=a=>a.replace(/((?<=^|[^a-z])[a-z][A-Z]{2,}|(?<=^|[^A-Z])[A-Z][a-z]{2,}|(?<=^|[^a-zA-Z])[a-z]+|(?<=^|[^a-zA-Z])[A-Z]+)/g,a=>e(a.toLowerCase())),t=a=>r(a).replaceAll(/([^a-z0-9_]+)/g,"_$1").toLowerCase().replaceAll(/[^a-z0-9]+/g,"_").replace(/^_+|_+$/g,""),l=a=>a.replace(/[|\\{}()[\]^$+*?.]/g,"\\$&"),i={camel:e=>a(e.split(/[^a-z0-9]/gi).map(r).join("")),headline:a=>t(a).split("_").map(e).join(" "),lcfirst:a,random:(a=16)=>Array.from(crypto.getRandomValues(new Uint8Array(Math.max(1,a))),a=>a.toString(36)).join(""),regexp:{sanitize:l,path:(a,e="^",r="$")=>{let t=e,i=r,s=null!=a?a:"";return s.startsWith("*.")&&(t=`${e}[a-zA-Z0-9-_]+`,s=s.slice(1)),s.endsWith(".*")&&(i=`[a-zA-Z0-9-_.]+${r}`,s=s.slice(0,-1)),s=s.split(".*.").map(l).join(".[a-zA-Z0-9-_]+."),new RegExp(`${t}${s}${i}`)}},snake:t,squish:a=>a.replaceAll(/\s+/g," ").trim(),ucfirst:e};export{i as default};
//# sourceMappingURL=string-helpers.modern.js.map
